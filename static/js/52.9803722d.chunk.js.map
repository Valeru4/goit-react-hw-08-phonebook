{"version":3,"file":"static/js/52.9803722d.chunk.js","mappings":"0PAEaA,EAAUC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sDAKnBC,EAAOH,EAAAA,GAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qNAYlBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uDAKpBK,EAAOP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iCAGfO,EAAQT,EAAAA,GAAAA,MAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,kGAOpBS,EAASX,EAAAA,GAAAA,OAAaY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,oQ,UClCtBW,EAAsB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAS,EACvDC,EAA2B,SAAAF,GAAK,OAAIA,EAAMC,SAASE,SAAU,EAC7DC,EAAuB,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,KAAM,E,mBCYrDC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,eACXP,GAAWQ,EAAAA,EAAAA,aAAYV,GAE7BW,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GA8BlBG,EAAY,WAChBL,EAAQ,IACRI,EAAU,GACZ,EAEA,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACvC,EAAO,CAAAsC,SAAC,wBACTF,EAAAA,EAAAA,MAAChC,EAAI,CAACoC,SAAU,SAAAC,GAAK,OAAIA,EAAMC,gBAAgB,EAACJ,SAAA,EAC9CF,EAAAA,EAAAA,MAAC9B,EAAK,CAAAgC,SAAA,EACJC,EAAAA,EAAAA,KAAC/B,EAAI,CAAA8B,SAAC,UACNC,EAAAA,EAAAA,KAAC7B,EAAK,CACJiC,KAAK,OACLd,KAAK,OACLe,MAAOf,EACPgB,YAAY,kBACZC,SAAU,SAAAL,GAAK,OAAIX,EAAQW,EAAMM,OAAOH,MAAM,EAC9CI,QAAQ,yHACRC,UAAQ,QAIZb,EAAAA,EAAAA,MAAC9B,EAAK,CAAAgC,SAAA,EACJC,EAAAA,EAAAA,KAAC/B,EAAI,CAAA8B,SAAC,YACNC,EAAAA,EAAAA,KAAC7B,EAAK,CACJiC,KAAK,MACLd,KAAK,SACLe,MAAOX,EACPa,SAAU,SAAAL,GAAK,OAAIP,EAAUO,EAAMM,OAAOH,MAAM,EAChDI,QAAQ,yFACRC,UAAQ,EACRJ,YAAY,0BAIhBN,EAAAA,EAAAA,KAAC3B,EAAM,CAAC+B,KAAK,SAASO,QAAS,kBA/DV,WACzB,GAAa,KAATrB,GAA0B,KAAXI,EAAnB,CAIA,IAAMkB,EAAU,CACdtB,KAAMA,EACNI,OAAQA,GAGV,GACEjB,EAASoC,MACP,SAAAD,GAAO,OAAIA,EAAQtB,KAAKwB,gBAAkBxB,EAAKwB,aAAa,IAG9D,OAAOC,MAAM,GAADC,OAAI1B,EAAI,4BAGtB,GAAIb,EAASoC,MAAK,SAAAD,GAAO,OAAIA,EAAQK,QAAUvB,CAAM,IACnD,OAAOqB,MAAM,GAADC,OAAItB,EAAM,4BAIxBX,GAASmC,EAAAA,EAAAA,IAAgBN,IACzBO,QAAQC,IAAIR,GACZhB,GArBA,MAFEmB,MAAM,aAwBV,CAqC2CM,EAAoB,EAACtB,SAAC,qBAMnE,ECxFauB,EAAO5D,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yNAWhBK,EAAOP,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4CAKfS,EAASX,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kQCbnC2D,EAAqCC,EAAQ,MAArCvC,EAAWsC,EAAXtC,YAAaD,EAAWuC,EAAXvC,YAERyC,EAAc,WACzB,IAAM1C,EAAWC,IACXP,EAAWQ,EAAYV,GAI7B,OACEyB,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SACW,OAARtB,QAAQ,IAARA,OAAQ,EAARA,EAAUiD,KAAI,SAAAd,GAAO,OACpBf,EAAAA,EAAAA,MAACyB,EAAI,CAAAvB,SAAA,EACHF,EAAAA,EAAAA,MAAC5B,EAAI,CAAA8B,SAAA,CACFa,EAAQtB,KAAK,KAAGsB,EAAQlB,WAE3BM,EAAAA,EAAAA,KAAC3B,EAAM,CACL+B,KAAK,SACLO,QAAS,kBAAM5B,GAAS4C,EAAAA,EAAAA,IAAmBf,EAAQgB,IAAI,EAAC7B,SACzD,WAPQa,EAAQgB,GAUZ,KAIf,E,oBC5BaC,EAAUnE,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kNAWxBkE,EAAepE,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0FC2BrC,EA1BqB,WACnB,IAAMmE,GAAkB9C,EAAAA,EAAAA,aAAY+C,EAAAA,IAC9BvD,GAAWQ,EAAAA,EAAAA,aAAYV,GACvBI,GAAYM,EAAAA,EAAAA,aAAYP,GACxBG,GAAQI,EAAAA,EAAAA,aAAYL,GACpBG,GAAWC,EAAAA,EAAAA,gBAEjBiD,EAAAA,EAAAA,YAAU,WACHF,GAELhD,GAASmD,EAAAA,EAAAA,MACX,GAAG,CAACH,EAAiBhD,IAErB,IAAMoD,EAAeC,MAAMC,QAAQ5D,IAAaA,EAAS6D,OAAS,EAElE,OACEzC,EAAAA,EAAAA,MAACgC,EAAO,CAAA9B,SAAA,EACNC,EAAAA,EAAAA,KAAClB,EAAW,IAEXH,IAAaqB,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,IACpB1D,IAASgB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,0BAAwBlB,MAErCmB,EAAAA,EAAAA,KAAC8B,EAAY,CAAA/B,SAAEoC,IAAgBnC,EAAAA,EAAAA,KAACyB,EAAW,QAGjD,C","sources":["components/ContactForm/ContactForm.styled.js","redux/contactSlice.js/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactlList.styled.js","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  margin-bottom: 15px;\n  font-size: 30px;\n`;\n\nexport const Form = styled.form`\n  background-color: #fff;\n  padding: 40px 30px;\n  border-radius: 8px;\n\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 7px;\n`;\nexport const Input = styled.input`\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  text-decoration: none;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n","export const userContactSelector = state => state.contacts.contacts;\nexport const contactIsLoadingSelector = state => state.contacts.isLoading;\nexport const contactErrorSelector = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  Heading,\n  Text,\n} from './ContactForm.styled';\nimport { useState } from 'react';\n\nimport { userContactSelector } from 'redux/contactSlice.js/selectors';\nimport { addContactThunk } from 'redux/contactSlice.js/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(userContactSelector);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handlerAddContacts = () => {\n    if (name === '' || number === '') {\n      alert('Enter data');\n      return;\n    }\n    const contact = {\n      name: name,\n      number: number,\n    };\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    if (contacts.some(contact => contact.phone === number)) {\n      return alert(`${number} is already in contacts`);\n    }\n\n    // console.log(contact);\n    dispatch(addContactThunk(contact));\n    console.log(contact);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Heading> Enter new contact</Heading>\n      <Form onSubmit={event => event.preventDefault()}>\n        <Label>\n          <Text>Name</Text>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Enter your name\"\n            onChange={event => setName(event.target.value)}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            required\n          />\n        </Label>\n\n        <Label>\n          <Text>Number</Text>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={event => setNumber(event.target.value)}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            required\n            placeholder=\"Enter your number\"\n          />\n        </Label>\n\n        <Button type=\"submit\" onClick={() => handlerAddContacts()}>\n          Add contact\n        </Button>\n      </Form>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  background-color: #f9f9f9;\n  padding: 10px;\n  border-radius: 4px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  margin: 0;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 8px;\n  background-color: #007bff;\n  color: #fff;\n  text-decoration: none;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n","import { Item, Text, Button } from './ContactlList.styled';\n\nimport { userContactSelector } from 'redux/contactSlice.js/selectors';\nimport { deleteContactThunk } from 'redux/contactSlice.js/operations';\n\nconst { useSelector, useDispatch } = require('react-redux');\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(userContactSelector);\n\n  // console.log(contacts);\n\n  return (\n    <>\n      {contacts?.map(contact => (\n        <Item key={contact.id}>\n          <Text>\n            {contact.name}: {contact.number}\n          </Text>\n          <Button\n            type=\"button\"\n            onClick={() => dispatch(deleteContactThunk(contact.id))}\n          >\n            &times;\n          </Button>\n        </Item>\n      ))}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  font-family: Arial, sans-serif;\n  background-color: #a9a9a9;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 80vh;\n  margin-top: 20px;\n`;\n\nexport const ListContacts = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: 15px;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authentificatedSelector } from 'redux/authSlice/selectors';\nimport { getContactThunk } from 'redux/contactSlice.js/operations';\nimport {\n  contactErrorSelector,\n  contactIsLoadingSelector,\n  userContactSelector,\n} from 'redux/contactSlice.js/selectors';\nimport { ListContacts, Section } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const authentificated = useSelector(authentificatedSelector);\n  const contacts = useSelector(userContactSelector);\n  const isLoading = useSelector(contactIsLoadingSelector);\n  const error = useSelector(contactErrorSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(getContactThunk());\n  }, [authentificated, dispatch]);\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  return (\n    <Section>\n      <ContactForm />\n\n      {isLoading && <Loader />}\n      {error && <p> Something goes wrong. {error}</p>}\n\n      <ListContacts>{showContacts && <ContactList />}</ListContacts>\n    </Section>\n  );\n};\nexport default ContactsPage;\n"],"names":["Heading","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Label","_templateObject3","Text","_templateObject4","Input","_templateObject5","Button","_templateObject6","userContactSelector","state","contacts","contactIsLoadingSelector","isLoading","contactErrorSelector","error","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","resetForm","_jsxs","_Fragment","children","_jsx","onSubmit","event","preventDefault","type","value","placeholder","onChange","target","pattern","required","onClick","contact","some","toLowerCase","alert","concat","phone","addContactThunk","console","log","handlerAddContacts","Item","_require","require","ContactList","map","deleteContactThunk","id","Section","ListContacts","authentificated","authentificatedSelector","useEffect","getContactThunk","showContacts","Array","isArray","length","Loader"],"sourceRoot":""}